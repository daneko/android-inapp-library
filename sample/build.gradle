buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'me.tatarka:gradle-retrolambda:3.2.0'
        classpath 'com.jakewharton.sdkmanager:gradle-plugin:0.12.+'
    }
}

apply plugin: 'android-sdk-manager'
apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'

android {
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    compileSdkVersion 22
    buildToolsVersion "22.0.1"

    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    def publicKey = properties.getProperty('public_key')
    def filePath = properties.getProperty('release.storeFile')
    def storePass = properties.getProperty('release.storePass')
    def alias = properties.getProperty('release.alias')
    def aliasPass = properties.getProperty('release.aliasPass')

    defaultConfig {
        // com.exampleはgoogle play に上げられなかった
        applicationId "jp.daneko.example"
        minSdkVersion 15
        targetSdkVersion 22
        versionCode 4
        versionName "0.1 alpha"
        buildConfigField "String", "PUBLIC_KEY", "\"$publicKey\""
    }

    if (filePath) {
        signingConfigs {
            release {
                storeFile file(filePath)
                storePassword storePass
                keyAlias alias
                keyPassword aliasPass
            }
        }
    }

    buildTypes {
        release {
            if (filePath) {
                signingConfig signingConfigs.release
            } else {
                signingConfig = android.signingConfigs.debug
            }
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro', 'proguard-assumenosideeffects-rules.pro'
        }
    }

    // 一旦checkコマンドを走らせるためにlint時にabortしないようにする
    lintOptions {
        abortOnError false
    }
}

repositories {
    maven { url 'https://daneko.github.io/m2repo/repository' }
}

dependencies {

    debugCompile project(':library')
    releaseCompile 'com.github.daneko:android-inapp-library:0.0.1-SNAPSHOT'

    // for slf4j
    compile 'com.github.tony19:logback-android-core:1.1.1-3'
    compile 'com.github.tony19:logback-android-classic:1.1.1-3'

    compile 'com.jakewharton:butterknife:5.1.2'

    provided 'org.projectlombok:lombok:1.16.4'

    compile fileTree(dir: 'libs', include: ['*.jar'])
}

retrolambda {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    def j8Home = properties.getProperty('java8_home')
    def j7Home = properties.getProperty('java7_home')

    jdk j8Home ?: System.getenv("JAVA8_HOME")
    oldJdk j7Home ?: System.getenv("JAVA7_HOME")
    javaVersion JavaVersion.VERSION_1_7
    //jvmArgs '-arg1', '-arg2'
}

