buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
    }
}

apply plugin: 'com.android.library'
apply plugin: 'maven-publish'
apply plugin: 'kotlin-android'

def GROUP_ID = 'com.github.daneko'
def LIBRARY_NAME = 'android-inapp-library'
def NAME = 'Android Inapp Library'


android {
    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools

    defaultConfig {
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode 1
        versionName versions.library
        consumerProguardFiles 'proguard-rules.pro'
    }

    lintOptions {
        abortOnError false
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$versions.kotlin"
    compile "com.android.support:support-annotations:$versions.supportLib"
    compile "io.reactivex:rxjava:$versions.rx"
    compile "org.functionaljava:functionaljava:$versions.fj"
    compile 'org.slf4j:slf4j-api:1.7.6'

    testCompile 'junit:junit:4.12'
    testCompile 'org.assertj:assertj-core:1.7.1'
    testCompile 'org.mockito:mockito-all:1.10.19'
    testCompile 'ch.qos.logback:logback-classic:1.1.2'
}

/**
 * archive
 */
task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.sourceFiles
}

def commonPom = {
    licenses {
        license {
            name 'The MIT License'
            url 'https://github.com/daneko/android-inapp-library/blob/master/LICENSE.txt'
            distribution 'repo'
        }
    }
    issueManagement {
        system 'github'
        url 'https://github.com/daneko/android-inapp-library/issues'
    }
    scm {
        url 'scm:https://github.com/daneko/android-inapp-library'
        connection 'scm:git@github.com:daneko/android-inapp-library.git'
        developerConnection 'scm:git@github.com:daneko/android-inapp-library.git'
    }
}

publishing {
    publications {
        aar(MavenPublication) {
            groupId GROUP_ID
            artifactId LIBRARY_NAME
            version versions.library
            artifact file("${project.buildDir}/outputs/aar/${project.name}-release.aar")
            artifact androidSourcesJar
            pom.withXml {
                Node root = asNode()
                root.appendNode('name', LIBRARY_NAME)
                root.appendNode('description', NAME)
                root.appendNode('url', 'https://github.com/daneko/android-inapp-library')
                root.children().last() + commonPom

                // http://stackoverflow.com/a/24764713/4221135
                def dependenciesNode = asNode().appendNode('dependencies')
                //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.compile.allDependencies.each {
                    def dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', it.group)
                    dependencyNode.appendNode('artifactId', it.name)
                    dependencyNode.appendNode('version', it.version)
                }
            }
        }
    }
    repositories {
        maven {
            url "${env.m2dir}"
        }
    }
}

publish.dependsOn 'assembleRelease'
publishToMavenLocal.dependsOn 'assembleRelease'
