buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'me.tatarka:gradle-retrolambda:3.2.0'
        classpath 'com.jakewharton.sdkmanager:gradle-plugin:0.12.+'
    }
}

// local.properties
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
def j8Home = properties.getProperty('java8_home')
def j7Home = properties.getProperty('java7_home')
def m2dir = properties.getProperty('upload.dir')

apply plugin: 'android-sdk-manager'
apply plugin: 'com.android.library'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'maven'


android {
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    compileSdkVersion 22
    buildToolsVersion "22.0.1"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        spock {}

        release {
            minifyEnabled false
        }
    }

    // 一旦checkコマンドを走らせるためにlint時にabortしないようにする
    lintOptions {
        abortOnError false
    }
}

configurations {
    export_jar
    compile.extendsFrom export_jar
}

dependencies {

    export_jar 'io.reactivex:rxandroid:0.25.0'

    export_jar 'org.functionaljava:functionaljava:4.4'

    export_jar 'org.slf4j:slf4j-api:1.7.6'

    export_jar 'com.google.code.findbugs:jsr305:3.0.0'

    provided 'org.projectlombok:lombok:1.16.4'
}

retrolambda {

    jdk j8Home ?: System.getenv("JAVA8_HOME")
    oldJdk j7Home ?: System.getenv("JAVA7_HOME")
    javaVersion JavaVersion.VERSION_1_7
    defaultMethods true
    incremental false
    //jvmArgs '-arg1', '-arg2'
}

/**
 * archive
 */
task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.sourceFiles
}

artifacts {
    archives androidSourcesJar
}

def repoPath = m2dir ?: "/tmp"

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: uri("${repoPath}/repository"))
            pom.version = '0.0.1-SNAPSHOT'
            pom.groupId = 'com.github.daneko'
            pom.artifactId = 'android-inapp-library'
            pom.project {
                inceptionYear '2014'
                packaging 'aar'
                licenses {
                    license {
                        name 'The MIT License'
                        url 'https://github.com/daneko/android-inapp-library/blob/master/LICENSE.txt'
                        distribution 'repo'
                    }
                }
                scm {
                    connection 'scm:https://daneko@github.com/daneko/android-inapp-library'
                    developerConnection 'scm:daneko@github.com/daneko/android-inapp-library.git'
                    url 'https://github.com/daneko/android-inapp-library'
                }
            }
        }
    }
}

task zip2jar(type: Zip, dependsOn: "bundleSpock") {
    from 'build/intermediates/classes/spock', configurations.export_jar.collect { it.isDirectory() ? it : zipTree(it) }
    destinationDir = file('build/fortest')
    extension = 'jar'
}

